name: "Deploy to Kubernetes"
description: "Deploy a container image to Kubernetes."

inputs:
  environment:
    description: "The environment targeted for the deployment"
    required: true
  tag:
    description: "The version tag associated with the deployment"
    required: true
  artifact-name:
    description: "Name of the artifact being deployed, it can be a docker image, a nuget package, etc."
    required: true
  service:
    description: "Name of the service being deployed"
  serviceRegistry:
    description: "Service registry url to push the artifact to."
    required: false
    type: string
    default: "docker.pkg.github.com"
  containerImageUrl:
    description: "Container image url to deploy. Used for external images. If not set, will use artifact-name"
    required: false
    type: string
    default: ""

runs:
  using: composite

  steps:
    - name: Check inputs
      shell: bash
      run: |
        if [[ "${{ inputs.environment }}" != "production" 
          && "${{ inputs.environment }}" != "staging" 
          && "${{ inputs.environment }}" != "development" ]]; then
            echo "Unsupported environment: ${{ inputs.environment }}"
          exit 1
        fi

    - name: Set CONTAINER_IMAGE_URL to publish
      shell: bash
      run: |
        imageUrl="${{ inputs.containerImageUrl }}"
        if [[ -z "$imageUrl" ]]; then
            imageUrl="${{inputs.service}}=${{inputs.serviceRegistry}}/$GITHUB_REPOSITORY/${{inputs.artifact-name}}:${{inputs.tag}}"
        fi
        echo "CONTAINER_IMAGE_URL=$imageUrl" >> $GITHUB_ENV

    #Since github runners working in Docker-in-Docker mode we need this workaround
    - name: Install Kubernetes & Kustomize
      shell: bash
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
        curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
        sudo mv kustomize /usr/local/bin/kustomize

    - name: Deploy Image
      shell: bash
      run: |
        cd deployment/${{inputs.service}}/overlays/${{inputs.environment}}/
        kustomize edit set image ${{env.CONTAINER_IMAGE_URL}}
        kustomize build . | kubectl apply --validate=false -f -

name: "Deploy a Docker Image to Kubernetes"
description: "Deploy a container image to Kubernetes."

inputs:
  serviceName:
    description: "Name of the service being deployed (ex: automatedhedging-monitor)"
    required: true
  containerImage:
    description: "Container image url to deploy. (ex: docker.pkg.github.com/scaletone/durablefunctionsmonitor)"
    required: true
  tag:
    description: "The version tag associated with the deployment (ex: 6.3)"
    required: true
  environment:
    description: "Environment to deploy to (development | staging | production). If not provided, will be the generated by [load-environment] action."
    required: false
    type: string
  actionsRepoRef:
    description: "Run actions from branch (Default is master)"
    required: false
    default: "master"
    
runs:
  using: composite

  steps:
    - name: Checkout trakx/github-actions
      uses: actions/checkout@v3
      with:
        repository: trakx/github-actions
        path: ./deploy-docker-image
        ref: ${{ inputs.actionsRepoRef }}
        
    # Load Environment steps
    - name: Load Environment
      id: load-environment
      uses: ./deploy-docker-image/load-environment

    - name: Pick and Validate Environment
      shell: bash
      id: pick-environment
      run: |
        DEPLOYMENT_ENVIRONMENT="${{ inputs.environment || steps.load-environment.outputs.environment }}"

        if [[ "$DEPLOYMENT_ENVIRONMENT" != "production" 
          && "$DEPLOYMENT_ENVIRONMENT" != "staging" 
          && "$DEPLOYMENT_ENVIRONMENT" != "development" ]]; then
            echo "Unsupported environment: $DEPLOYMENT_ENVIRONMENT"
          exit 1
        fi

        echo "Picked environment to deploy container image: $DEPLOYMENT_ENVIRONMENT"
        echo "environment=$DEPLOYMENT_ENVIRONMENT" >> $GITHUB_OUTPUT
    
    #Since github runners working in Docker-in-Docker mode we need this workaround
    - name: Install Kubernetes & Kustomize
      shell: bash
      run: |
        curl -LO "https://dl.k8s.io/release/v1.22.2/bin/linux/amd64/kubectl"
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
        curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
        sudo mv kustomize /usr/local/bin/kustomize

    - name: Deploy Image
      shell: bash
      run: |
        cd deployment/${{inputs.serviceName}}/overlays/${{steps.pick-environment.outputs.environment}}/
        kustomize edit set image ${{inputs.serviceName}}=${{inputs.containerImage}}:${{inputs.tag}}
        kustomize build . | kubectl apply --validate=false -f -
